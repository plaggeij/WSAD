@page "/Customers"
@using Assignment_7_Models
@inject HttpClient http

<h3>Customers</h3>

<p>
    <a href="/CustomerCreate">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                First Name
            </th>
            <th>
                Last Name
            </th>
            <th>
               Address
            </th>
            <th>
                City
            </th>
            <th>
                State
            </th>
            <th>
                Postal Code
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @if (CustomerList != null)
    {
        @foreach (var customer in CustomerList)
        {
            <tr>
                <td>
                    @customer.FirstName
                </td>
                <td>
                    @customer.LastName
                </td>
                <td>
                    @customer.Address
                </td>
                <td>
                    @customer.City
                </td>
                <td>
                    @customer.State
                </td>
                <td>
                    @customer.PostalCode
                </td>
                <td>
                    <a href="CustomerEdit/@customer.CustomerId">Edit</a> |
                    <a href="CustomerDetails/@customer.CustomerId">Details</a> |
                    <a @onclick="@(() => DeleteCustomer(customer.CustomerId))" @onabort:preventDefault="true" href="">Delete</a>
                </td>
            </tr> 
        }
    }
    </tbody>
</table>


@code {
    
    public List<CustomerViewModel>? CustomerList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            CustomerList = await http.GetFromJsonAsync<List<CustomerViewModel>>("api/Customers");
        }
        catch (Exception ex)
        {
            
        }
        await base.OnInitializedAsync();
    }

    private async void DeleteCustomer(int CustomerId)
    {
        var result = await http.DeleteAsync($"api/Customers/{CustomerId}");
        CustomerList = await http.GetFromJsonAsync<List<CustomerViewModel>>("api/Customers");
        StateHasChanged();
    }

}
